{"version":3,"file":"app.js","mappings":"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","sources":["webpack:///./node_modules/@firebase/util/src/constants.ts","webpack:///./node_modules/@firebase/util/src/crypt.ts","webpack:///./node_modules/@firebase/util/src/environment.ts","webpack:///./node_modules/@firebase/util/src/defaults.ts","webpack:///./node_modules/@firebase/util/src/deferred.ts","webpack:///./node_modules/@firebase/util/src/errors.ts","webpack:///./node_modules/@firebase/util/src/obj.ts","webpack:///./node_modules/@firebase/util/src/compat.ts","webpack:///./node_modules/firebase/app/index.ts","webpack:///./node_modules/@firebase/messaging/src/util/constants.ts","webpack:///./node_modules/@firebase/messaging/src/interfaces/internal-message-payload.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/array-base64-translator.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/migrate-old-database.ts","webpack:///./node_modules/@firebase/messaging/src/internals/idb-manager.ts","webpack:///./node_modules/@firebase/messaging/src/util/errors.ts","webpack:///./node_modules/@firebase/messaging/src/internals/requests.ts","webpack:///./node_modules/@firebase/messaging/src/internals/token-manager.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/externalizePayload.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/logToFirelog.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/extract-app-config.ts","webpack:///./node_modules/@firebase/messaging/src/messaging-service.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/registerDefaultSw.ts","webpack:///./node_modules/@firebase/messaging/src/api/getToken.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/updateVapidKey.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/updateSwReg.ts","webpack:///./node_modules/@firebase/messaging/src/listeners/window-listener.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/is-console-message.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/logToScion.ts","webpack:///./node_modules/@firebase/messaging/src/api/isSupported.ts","webpack:///./node_modules/@firebase/messaging/src/api.ts","webpack:///./node_modules/@firebase/messaging/src/api/deleteToken.ts","webpack:///./node_modules/@firebase/messaging/src/api/onMessage.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/register.ts","webpack:///./node_modules/@firebase/messaging/src/listeners/sw-listeners.ts","webpack:///./node_modules/@firebase/messaging/src/api/onBackgroundMessage.ts","webpack:///./node_modules/@firebase/messaging/src/api/setDeliveryMetricsExportedToBigQueryEnabled.ts","webpack:///./node_modules/@firebase/messaging/src/helpers/sleep.ts","webpack:///./src/index.ts","webpack:///./node_modules/@firebase/logger/src/logger.ts","webpack:///./node_modules/@firebase/app/src/platformLoggerService.ts","webpack:///./node_modules/@firebase/app/src/logger.ts","webpack:///./node_modules/@firebase/app/src/constants.ts","webpack:///./node_modules/@firebase/app/src/internal.ts","webpack:///./node_modules/@firebase/app/src/errors.ts","webpack:///./node_modules/@firebase/app/src/firebaseApp.ts","webpack:///./node_modules/@firebase/app/src/api.ts","webpack:///./node_modules/@firebase/app/src/indexeddb.ts","webpack:///./node_modules/@firebase/app/src/heartbeatService.ts","webpack:///./node_modules/@firebase/app/src/registerCoreComponents.ts","webpack:///./node_modules/@firebase/app/src/index.ts","webpack:///./node_modules/@firebase/component/src/component.ts","webpack:///./node_modules/@firebase/component/src/constants.ts","webpack:///./node_modules/@firebase/component/src/provider.ts","webpack:///./node_modules/@firebase/component/src/component_container.ts","webpack:///./node_modules/@firebase/installations/src/util/constants.ts","webpack:///./node_modules/@firebase/installations/src/util/errors.ts","webpack:///./node_modules/@firebase/installations/src/functions/common.ts","webpack:///./node_modules/@firebase/installations/src/util/sleep.ts","webpack:///./node_modules/@firebase/installations/src/helpers/generate-fid.ts","webpack:///./node_modules/@firebase/installations/src/helpers/buffer-to-base64-url-safe.ts","webpack:///./node_modules/@firebase/installations/src/util/get-key.ts","webpack:///./node_modules/@firebase/installations/src/helpers/fid-changed.ts","webpack:///./node_modules/@firebase/installations/src/helpers/idb-manager.ts","webpack:///./node_modules/@firebase/installations/src/helpers/get-installation-entry.ts","webpack:///./node_modules/@firebase/installations/src/functions/create-installation-request.ts","webpack:///./node_modules/@firebase/installations/src/functions/generate-auth-token-request.ts","webpack:///./node_modules/@firebase/installations/src/helpers/refresh-auth-token.ts","webpack:///./node_modules/@firebase/installations/src/helpers/extract-app-config.ts","webpack:///./node_modules/@firebase/installations/src/functions/config.ts","webpack:///./node_modules/@firebase/installations/src/api/get-id.ts","webpack:///./node_modules/@firebase/installations/src/api/get-token.ts","webpack:///./node_modules/@firebase/installations/src/index.ts","webpack:///./node_modules/idb/build/wrap-idb-value.js","webpack:///./node_modules/idb/build/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/startup"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\nexport const MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST = 1000;\nexport const MAX_RETRIES = 3;\nexport const LOG_INTERVAL_IN_MS = 86400000; //24 hour\nexport const DEFAULT_BACKOFF_TIME_MS = 5000;\n\n// FCM log source name registered at Firelog: 'FCM_CLIENT_EVENT_LOGGING'. It uniquely identifies\n// FCM's logging configuration.\nexport const FCM_LOG_SOURCE = 1249;\n\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\nexport const SDK_PLATFORM_WEB = 3;\nexport const EVENT_MESSAGE_DELIVERED = 1;\n\nexport enum MessageType {\n  DATA_MESSAGE = 1,\n  DISPLAY_NOTIFICATION = 3\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  fcmMessageId: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n  icon?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDB, openDB } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (\n      indexedDB as {\n        databases(): Promise<Array<{ name: string; version: number }>>;\n      }\n    ).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n    upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\n      if (oldVersion < 2) {\n        // Database too old, skip migration.\n        return;\n      }\n\n      if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n        // Database did not exist. Nothing to do.\n        return;\n      }\n\n      const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n      const value = await objectStore.index('fcmSenderId').get(senderId);\n      await objectStore.clear();\n\n      if (!value) {\n        // No entry in the database, nothing to migrate.\n        return;\n      }\n\n      if (oldVersion === 2) {\n        const oldDetails = value as V2TokenDetails;\n\n        if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n          return;\n        }\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime ?? Date.now(),\n          subscriptionOptions: {\n            auth: oldDetails.auth,\n            p256dh: oldDetails.p256dh,\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey:\n              typeof oldDetails.vapidKey === 'string'\n                ? oldDetails.vapidKey\n                : arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 3) {\n        const oldDetails = value as V3TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 4) {\n        const oldDetails = value as V4TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      }\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDB(OLD_DB_NAME);\n  await deleteDB('fcm_vapid_details_db');\n  await deleteDB('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, deleteDB, openDB } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\ninterface MessagingDB extends DBSchema {\n  'firebase-messaging-store': {\n    key: string;\n    value: TokenDetails;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<MessagingDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<MessagingDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (upgradeDb, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = (await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key)) as TokenDetails;\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.done;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDB(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the Firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription =\n    await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n\n  const icon = messagePayloadInternal.notification!.icon;\n  if (!!icon) {\n    payload.notification!.icon = icon;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n  if (\n    !messagePayloadInternal.fcmOptions &&\n    !messagePayloadInternal.notification?.click_action\n  ) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link =\n    messagePayloadInternal.fcmOptions?.link ??\n    messagePayloadInternal.notification?.click_action;\n\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions?.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_BACKOFF_TIME_MS,\n  EVENT_MESSAGE_DELIVERED,\n  FCM_LOG_SOURCE,\n  LOG_INTERVAL_IN_MS,\n  MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST,\n  MAX_RETRIES,\n  MessageType,\n  SDK_PLATFORM_WEB\n} from '../util/constants';\nimport {\n  FcmEvent,\n  LogEvent,\n  LogRequest,\n  LogResponse\n} from '../interfaces/logging-types';\n\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\nimport { MessagingService } from '../messaging-service';\n\nconst FIRELOG_ENDPOINT = _mergeStrings(\n  'hts/frbslgigp.ogepscmv/ieo/eaylg',\n  'tp:/ieaeogn-agolai.o/1frlglgc/o'\n);\n\nconst FCM_TRANSPORT_KEY = _mergeStrings(\n  'AzSCbw63g1R0nCw85jG8',\n  'Iaya3yLKwmgvh7cF0q4'\n);\n\nexport function startLoggingService(messaging: MessagingService): void {\n  if (!messaging.isLogServiceStarted) {\n    _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    messaging.isLogServiceStarted = true;\n  }\n}\n\n/**\n *\n * @param messaging the messaging instance.\n * @param offsetInMs this method execute after `offsetInMs` elapsed .\n */\nexport function _processQueue(\n  messaging: MessagingService,\n  offsetInMs: number\n): void {\n  setTimeout(async () => {\n    if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n      // flush events and terminate logging service\n      messaging.logEvents = [];\n      messaging.isLogServiceStarted = false;\n\n      return;\n    }\n\n    if (!messaging.logEvents.length) {\n      return _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    }\n\n    await _dispatchLogEvents(messaging);\n  }, offsetInMs);\n}\n\nexport async function _dispatchLogEvents(\n  messaging: MessagingService\n): Promise<void> {\n  for (\n    let i = 0, n = messaging.logEvents.length;\n    i < n;\n    i += MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST\n  ) {\n    const logRequest = _createLogRequest(\n      messaging.logEvents.slice(i, i + MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST)\n    );\n\n    let retryCount = 0,\n      response = {} as Response;\n\n    do {\n      try {\n        response = await fetch(\n          FIRELOG_ENDPOINT.concat('?key=', FCM_TRANSPORT_KEY),\n          {\n            method: 'POST',\n            body: JSON.stringify(logRequest)\n          }\n        );\n\n        // don't retry on 200s or non retriable errors\n        if (response.ok || (!response.ok && !isRetriableError(response))) {\n          break;\n        }\n\n        if (!response.ok && isRetriableError(response)) {\n          // rethrow to retry with quota\n          throw new Error(\n            'a retriable Non-200 code is returned in fetch to Firelog endpoint. Retry'\n          );\n        }\n      } catch (error) {\n        const isLastAttempt = retryCount === MAX_RETRIES;\n        if (isLastAttempt) {\n          // existing the do-while interactive retry logic because retry quota has reached.\n          break;\n        }\n      }\n\n      let delayInMs: number;\n      try {\n        delayInMs = Number(\n          ((await response.json()) as LogResponse).nextRequestWaitMillis\n        );\n      } catch (e) {\n        delayInMs = DEFAULT_BACKOFF_TIME_MS;\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delayInMs));\n\n      retryCount++;\n    } while (retryCount < MAX_RETRIES);\n  }\n\n  messaging.logEvents = [];\n  // schedule for next logging\n  _processQueue(messaging, LOG_INTERVAL_IN_MS);\n}\n\nfunction isRetriableError(response: Response): boolean {\n  const httpStatus = response.status;\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\nexport async function stageLog(\n  messaging: MessagingService,\n  internalPayload: MessagePayloadInternal\n): Promise<void> {\n  const fcmEvent = createFcmEvent(\n    internalPayload,\n    await messaging.firebaseDependencies.installations.getId()\n  );\n\n  createAndEnqueueLogEvent(messaging, fcmEvent);\n}\n\nfunction createFcmEvent(\n  internalPayload: MessagePayloadInternal,\n  fid: string\n): FcmEvent {\n  const fcmEvent = {} as FcmEvent;\n\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcmMessageId) {\n    fcmEvent.message_id = internalPayload.fcmMessageId;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!internalPayload.fcmOptions?.analytics_label) {\n    fcmEvent.analytics_label = internalPayload.fcmOptions?.analytics_label;\n  }\n\n  /* eslint-enable camelcase */\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(\n  messaging: MessagingService,\n  fcmEvent: FcmEvent\n): void {\n  const logEvent = {} as LogEvent;\n\n  /* eslint-disable camelcase */\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\n  // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nexport function _createLogRequest(logEventQueue: LogEvent[]): LogRequest {\n  const logRequest = {} as LogRequest;\n\n  /* eslint-disable camelcase */\n  logRequest.log_source = FCM_LOG_SOURCE.toString();\n  logRequest.log_event = logEventQueue;\n  /* eslint-enable camelcase */\n\n  return logRequest;\n}\n\nexport function _mergeStrings(s1: string, s2: string): string {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { LogEvent } from './interfaces/logging-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n  // logging is only done with end user consent. Default to false.\n  deliveryMetricsExportedToBigQueryEnabled: boolean = false;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler: NextFn<MessagePayload> | Observer<MessagePayload> | null =\n    null;\n\n  logEvents: LogEvent[] = [];\n  isLogServiceStarted: boolean = false;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_SW_PATH, DEFAULT_SW_SCOPE } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function registerDefaultSw(\n  messaging: MessagingService\n): Promise<void> {\n  try {\n    messaging.swRegistration = await navigator.serviceWorker.register(\n      DEFAULT_SW_PATH,\n      {\n        scope: DEFAULT_SW_SCOPE\n      }\n    );\n\n    // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n    // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n    // is stuck with the old version. For example,\n    // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n    // sw if there was an update.\n    messaging.swRegistration.update().catch(() => {\n      /* it is non blocking and we don't care if it failed */\n    });\n  } catch (e) {\n    throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n      browserErrorMessage: (e as Error)?.message\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { getTokenInternal } from '../internals/token-manager';\nimport { updateSwReg } from '../helpers/updateSwReg';\nimport { updateVapidKey } from '../helpers/updateVapidKey';\nimport { GetTokenOptions } from '../interfaces/public-types';\n\nexport async function getToken(\n  messaging: MessagingService,\n  options?: GetTokenOptions\n): Promise<string> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (Notification.permission === 'default') {\n    await Notification.requestPermission();\n  }\n\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  await updateVapidKey(messaging, options?.vapidKey);\n  await updateSwReg(messaging, options?.serviceWorkerRegistration);\n\n  return getTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\n\nexport async function updateVapidKey(\n  messaging: MessagingService,\n  vapidKey?: string | undefined\n): Promise<void> {\n  if (!!vapidKey) {\n    messaging.vapidKey = vapidKey;\n  } else if (!messaging.vapidKey) {\n    messaging.vapidKey = DEFAULT_VAPID_KEY;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { registerDefaultSw } from './registerDefaultSw';\n\nexport async function updateSwReg(\n  messaging: MessagingService,\n  swRegistration?: ServiceWorkerRegistration | undefined\n): Promise<void> {\n  if (!swRegistration && !messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  if (!swRegistration && !!messaging.swRegistration) {\n    return;\n  }\n\n  if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n  }\n\n  messaging.swRegistration = swRegistration;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { CONSOLE_CAMPAIGN_ANALYTICS_ENABLED } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { logToScion } from '../helpers/logToScion';\n\nexport async function messageEventListener(\n  messaging: MessagingService,\n  event: MessageEvent\n): Promise<void> {\n  const internalPayload = event.data as MessagePayloadInternal;\n\n  if (!internalPayload.isFirebaseMessaging) {\n    return;\n  }\n\n  if (\n    messaging.onMessageHandler &&\n    internalPayload.messageType === MessageType.PUSH_RECEIVED\n  ) {\n    if (typeof messaging.onMessageHandler === 'function') {\n      messaging.onMessageHandler(externalizePayload(internalPayload));\n    } else {\n      messaging.onMessageHandler.next(externalizePayload(internalPayload));\n    }\n  }\n\n  // Log to Scion if applicable\n  const dataPayload = internalPayload.data;\n  if (\n    isConsoleMessage(dataPayload) &&\n    dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n  ) {\n    await logToScion(messaging, internalPayload.messageType!, dataPayload);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function logToScion(\n  messaging: MessagingService,\n  messageType: MessageType,\n  data: ConsoleMessageData\n): Promise<void> {\n  const eventType = getEventType(messageType);\n  const analytics =\n    await messaging.firebaseDependencies.analyticsProvider.get();\n  analytics.logEvent(eventType, {\n    /* eslint-disable camelcase */\n    message_id: data[CONSOLE_CAMPAIGN_ID],\n    message_name: data[CONSOLE_CAMPAIGN_NAME],\n    message_time: data[CONSOLE_CAMPAIGN_TIME],\n    message_device_time: Math.floor(Date.now() / 1000)\n    /* eslint-enable camelcase */\n  });\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  areCookiesEnabled,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\n\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isWindowSupported(): Promise<boolean> {\n  try {\n    // This throws if open() is unsupported, so adding it to the conditional\n    // statement below can cause an uncaught error.\n    await validateIndexedDBOpenable();\n  } catch (e) {\n    return false;\n  }\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    typeof window !== 'undefined' &&\n    isIndexedDBAvailable() &&\n    areCookiesEnabled() &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks whether all required APIs exist within SW Context\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    isIndexedDBAvailable() &&\n    (await validateIndexedDBOpenable()) &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app';\nimport {\n  GetTokenOptions,\n  MessagePayload,\n  Messaging\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\nimport { isSwSupported, isWindowSupported } from './api/isSupported';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { _setDeliveryMetricsExportedToBigQueryEnabled } from './api/setDeliveryMetricsExportedToBigQueryEnabled';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(\n    isSupported => {\n      // If `isWindowSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isWindowSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(\n    isSupported => {\n      // If `isSwSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isSwSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optinoal service worker registration\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: Messaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: Messaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\n * disable the export at runtime.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\n * BigQuery.\n *\n * @public\n */\nexport function experimentalSetDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { deleteTokenInternal } from '../internals/token-manager';\nimport { registerDefaultSw } from '../helpers/registerDefaultSw';\n\nexport async function deleteToken(\n  messaging: MessagingService\n): Promise<boolean> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (!messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  return deleteTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  messaging.onMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { GetTokenOptions } from '../interfaces/public-types';\nimport { MessagingInternal } from '@firebase/messaging-interop-types';\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { getToken } from '../api/getToken';\nimport { messageEventListener } from '../listeners/window-listener';\n\nimport { name, version } from '../../package.json';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory: InstanceFactory<'messaging-internal'> = (\n  container: ComponentContainer\n) => {\n  const messaging = container\n    .getProvider('messaging')\n    .getImmediate() as MessagingService;\n\n  const messagingInternal: MessagingInternal = {\n    getToken: (options?: GetTokenOptions) => getToken(messaging, options)\n  };\n\n  return messagingInternal;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n\n  _registerComponent(\n    new Component(\n      'messaging-internal',\n      WindowMessagingInternalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, FCM_MSG } from '../util/constants';\nimport {\n  MessagePayloadInternal,\n  MessageType,\n  NotificationPayloadInternal\n} from '../interfaces/internal-message-payload';\nimport {\n  NotificationEvent,\n  PushEvent,\n  PushSubscriptionChangeEvent,\n  ServiceWorkerGlobalScope,\n  WindowClient\n} from '../util/sw-types';\nimport {\n  deleteTokenInternal,\n  getTokenInternal\n} from '../internals/token-manager';\n\nimport { MessagingService } from '../messaging-service';\nimport { dbGet } from '../internals/idb-manager';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { sleep } from '../helpers/sleep';\nimport { stageLog } from '../helpers/logToFirelog';\n\n// Let TS know that this is a service worker\ndeclare const self: ServiceWorkerGlobalScope;\n\nexport async function onSubChange(\n  event: PushSubscriptionChangeEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const { newSubscription } = event;\n  if (!newSubscription) {\n    // Subscription revoked, delete token\n    await deleteTokenInternal(messaging);\n    return;\n  }\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  await deleteTokenInternal(messaging);\n\n  messaging.vapidKey =\n    tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY;\n  await getTokenInternal(messaging);\n}\n\nexport async function onPush(\n  event: PushEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const internalPayload = getMessagePayloadInternal(event);\n  if (!internalPayload) {\n    // Failed to get parsed MessagePayload from the PushEvent. Skip handling the push.\n    return;\n  }\n\n  // log to Firelog with user consent\n  if (messaging.deliveryMetricsExportedToBigQueryEnabled) {\n    await stageLog(messaging, internalPayload);\n  }\n\n  // foreground handling: eventually passed to onMessage hook\n  const clientList = await getClientList();\n  if (hasVisibleClients(clientList)) {\n    return sendMessagePayloadInternalToWindows(clientList, internalPayload);\n  }\n\n  // background handling: display if possible and pass to onBackgroundMessage hook\n  if (!!internalPayload.notification) {\n    await showNotification(wrapInternalPayload(internalPayload));\n  }\n\n  if (!messaging) {\n    return;\n  }\n\n  if (!!messaging.onBackgroundMessageHandler) {\n    const payload = externalizePayload(internalPayload);\n\n    if (typeof messaging.onBackgroundMessageHandler === 'function') {\n      await messaging.onBackgroundMessageHandler(payload);\n    } else {\n      messaging.onBackgroundMessageHandler.next(payload);\n    }\n  }\n}\n\nexport async function onNotificationClick(\n  event: NotificationEvent\n): Promise<void> {\n  const internalPayload: MessagePayloadInternal =\n    event.notification?.data?.[FCM_MSG];\n\n  if (!internalPayload) {\n    return;\n  } else if (event.action) {\n    // User clicked on an action button. This will allow developers to act on action button clicks\n    // by using a custom onNotificationClick listener that they define.\n    return;\n  }\n\n  // Prevent other listeners from receiving the event\n  event.stopImmediatePropagation();\n  event.notification.close();\n\n  // Note clicking on a notification with no link set will focus the Chrome's current tab.\n  const link = getLink(internalPayload);\n  if (!link) {\n    return;\n  }\n\n  // FM should only open/focus links from app's origin.\n  const url = new URL(link, self.location.href);\n  const originUrl = new URL(self.location.origin);\n\n  if (url.host !== originUrl.host) {\n    return;\n  }\n\n  let client = await getWindowClient(url);\n\n  if (!client) {\n    client = await self.clients.openWindow(link);\n\n    // Wait three seconds for the client to initialize and set up the message handler so that it\n    // can receive the message.\n    await sleep(3000);\n  } else {\n    client = await client.focus();\n  }\n\n  if (!client) {\n    // Window Client will not be returned if it's for a third party origin.\n    return;\n  }\n\n  internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n  internalPayload.isFirebaseMessaging = true;\n  return client.postMessage(internalPayload);\n}\n\nfunction wrapInternalPayload(\n  internalPayload: MessagePayloadInternal\n): NotificationPayloadInternal {\n  const wrappedInternalPayload: NotificationPayloadInternal = {\n    ...(internalPayload.notification as unknown as NotificationPayloadInternal)\n  };\n\n  // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n  wrappedInternalPayload.data = {\n    [FCM_MSG]: internalPayload\n  };\n\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal({\n  data\n}: PushEvent): MessagePayloadInternal | null {\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n\n/**\n * @param url The URL to look for when focusing a client.\n * @return Returns an existing window client or a newly opened WindowClient.\n */\nasync function getWindowClient(url: URL): Promise<WindowClient | null> {\n  const clientList = await getClientList();\n\n  for (const client of clientList) {\n    const clientUrl = new URL(client.url, self.location.href);\n\n    if (url.host === clientUrl.host) {\n      return client;\n    }\n  }\n\n  return null;\n}\n\n/**\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\n * otherwise false.\n */\nfunction hasVisibleClients(clientList: WindowClient[]): boolean {\n  return clientList.some(\n    client =>\n      client.visibilityState === 'visible' &&\n      // Ignore chrome-extension clients as that matches the background pages of extensions, which\n      // are always considered visible for some reason.\n      !client.url.startsWith('chrome-extension://')\n  );\n}\n\nfunction sendMessagePayloadInternalToWindows(\n  clientList: WindowClient[],\n  internalPayload: MessagePayloadInternal\n): void {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  for (const client of clientList) {\n    client.postMessage(internalPayload);\n  }\n}\n\nfunction getClientList(): Promise<WindowClient[]> {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  }) as Promise<WindowClient[]>;\n}\n\nfunction showNotification(\n  notificationPayloadInternal: NotificationPayloadInternal\n): Promise<void> {\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  const { actions } = notificationPayloadInternal;\n  const { maxActions } = Notification;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\n      `This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`\n    );\n  }\n\n  return self.registration.showNotification(\n    /* title= */ notificationPayloadInternal.title ?? '',\n    notificationPayloadInternal\n  );\n}\n\nfunction getLink(payload: MessagePayloadInternal): string | null {\n  // eslint-disable-next-line camelcase\n  const link = payload.fcmOptions?.link ?? payload.notification?.click_action;\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onBackgroundMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (self.document !== undefined) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  messaging.onBackgroundMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onBackgroundMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Messaging } from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function _setDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  (messaging as MessagingService).deliveryMetricsExportedToBigQueryEnabled =\n    enable;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar app_1 = require(\"firebase/app\");\nvar sw_1 = require(\"firebase/messaging/sw\");\nvar messaging_1 = require(\"firebase/messaging\");\nrequire(\"./main.css\");\n(function () { return __awaiter(void 0, void 0, void 0, function () {\n    var sw, e_1, supported, app, messaging, token;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                _a.trys.push([0, 2, , 3]);\n                return [4 /*yield*/, window.navigator.serviceWorker.register('./firebase-messaging-sw.js')];\n            case 1:\n                sw = _a.sent();\n                console.log('Registration successful, scope is:', sw.scope);\n                return [3 /*break*/, 3];\n            case 2:\n                e_1 = _a.sent();\n                console.error('Service worker registration failed:', e_1);\n                return [3 /*break*/, 3];\n            case 3: return [4 /*yield*/, (0, messaging_1.isSupported)().catch(function () { return false; })];\n            case 4:\n                supported = _a.sent();\n                if (!supported)\n                    return [2 /*return*/];\n                app = (0, app_1.initializeApp)({\n                    apiKey: \"AIzaSyBAcp1sqaS-fjIJP_9Ar5lxa1etqllwzUk\",\n                    authDomain: \"rb-web-push-20427.firebaseapp.com\",\n                    projectId: \"rb-web-push-20427\",\n                    storageBucket: \"rb-web-push-20427.appspot.com\",\n                    messagingSenderId: \"696340818215\",\n                    appId: \"1:696340818215:web:223cc352b22ce50df8a102\"\n                });\n                messaging = (0, messaging_1.getMessaging)(app);\n                return [4 /*yield*/, (0, messaging_1.getToken)(messaging, {\n                        vapidKey: 'BMdVLXCtTG3jiuuwlPOiTgmItdpGOzAngJphN-M7oCPJzaqK2pxbzl7-0Ry3vRjFuRc2iAKc3E3PF5SlZfiiuHY'\n                    })];\n            case 5:\n                token = _a.sent();\n                if (token) {\n                    // Send the token to your server and update the UI if necessary\n                    console.log('token', token);\n                }\n                else {\n                    console.log('No registration token available. Request permission to generate one');\n                }\n                (0, messaging_1.onMessage)(messaging, function (payload) {\n                    console.log('front message:', payload);\n                });\n                (0, sw_1.onBackgroundMessage)(messaging, function (payload) {\n                    console.log('background message:', payload);\n                    // Customize notification here\n                    var notificationTitle = 'Background Message Title';\n                    var notificationOptions = {\n                        body: 'Background Message body.',\n                        icon: '/firebase-logo.png'\n                    };\n                    self.registration.showNotification(notificationTitle, notificationOptions);\n                });\n                return [2 /*return*/];\n        }\n    });\n}); })();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || (self as unknown as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, openDB } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\ninterface InstallationsDB extends DBSchema {\n  'firebase-installations-store': {\n    key: string;\n    value: InstallationEntry | undefined;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<InstallationsDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<InstallationsDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key) as Promise<InstallationEntry>;\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = (await objectStore.get(key)) as InstallationEntry;\n  await objectStore.put(value, key);\n  await tx.done;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = (await store.get(\n    key\n  )) as InstallationEntry;\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.done;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.done;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  installations: FirebaseInstallationsImpl\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(installations.appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      installations,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      installations,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      installations,\n      installationEntry\n    );\n    return set(installations.appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(installations.appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(\n    installations.appConfig\n  );\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(installations.appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const { installationEntry, registrationPromise } =\n      await getInstallationEntry(installations);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION,\n      appId: appConfig.appId\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken =\n      extractAuthTokenInfoFromResponse(responseValue);\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\n\nconst publicFactory: InstanceFactory<'installations'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    heartbeatServiceProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(installations: Installations): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: Installations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(installations);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * Firebase Installations\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerInstallations } from './functions/config';\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nexport * from './api';\nexport * from './interfaces/public-types';\n\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name, version, '__BUILD_TARGET__');\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","Promise","resolve","reject","preExist","DB_CHECK_NAME","request","self","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","error","message","areCookiesEnabled","navigator","cookieEnabled","getDefaults","window","g","getGlobal","__FIREBASE_DEFAULTS__","process","env","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","e","decoded","console","base64Decode","getDefaultsFromCookie","info","getDefaultAppConfig","config","Deferred","constructor","promise","wrapCallback","callback","value","catch","FirebaseError","code","customData","super","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","PATTERN","_","key","replaceTemplate","fullMessage","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","getModularInstance","_delegate","DEFAULT_VAPID_KEY","MessageType","arrayToBase64","array","uint8Array","Uint8Array","base64ToArray","base64String","repeat","rawData","outputArray","OLD_DB_NAME","OLD_OBJECT_STORE_NAME","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgrade","upgradeDb","oldVersion","createObjectStore","async","dbGet","firebaseDependencies","getKey","db","tokenDetails","transaction","objectStore","get","oldTokenDetails","senderId","dbNames","databases","map","name","newVersion","upgradeTransaction","objectStoreNames","contains","index","clear","oldDetails","auth","p256dh","endpoint","token","fcmToken","createTime","Date","now","subscriptionOptions","swScope","vapidKey","checkTokenDetails","migrateOldDatabase","appConfig","dbSet","tx","put","done","appId","ERROR_FACTORY","requestDeleteToken","unsubscribeOptions","method","headers","getHeaders","response","fetch","getEndpoint","responseData","json","errorInfo","err","toString","projectId","installations","authToken","getToken","Headers","Accept","apiKey","getBody","body","web","applicationPubKey","deleteTokenInternal","messaging","delete","dbRemove","pushSubscription","swRegistration","pushManager","getSubscription","unsubscribe","getNewToken","subscribeOptions","stringify","requestGetToken","externalizePayload","internalPayload","payload","from","collapseKey","collapse_key","messageId","fcmMessageId","messagePayloadInternal","notification","title","image","icon","propagateNotificationPayload","propagateDataPayload","fcmOptions","click_action","link","analyticsLabel","analytics_label","propagateFcmOptions","_mergeStrings","s1","s2","resultArray","getMissingValueError","valueName","MessagingService","app","analyticsProvider","options","configKeys","keyName","appName","messagingSenderId","extractAppConfig","_delete","registerDefaultSw","serviceWorker","register","scope","update","browserErrorMessage","Notification","permission","requestPermission","updateVapidKey","ServiceWorkerRegistration","updateSwReg","serviceWorkerRegistration","subscribe","userVisibleOnly","applicationServerKey","getPushSubscription","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","isTokenValid","updatedToken","updateOptions","requestUpdateToken","updatedTokenDetails","updateToken","warn","getTokenInternal","messageEventListener","event","isFirebaseMessaging","onMessageHandler","messageType","PUSH_RECEIVED","next","dataPayload","eventType","NOTIFICATION_CLICKED","getEventType","logEvent","message_id","CONSOLE_CAMPAIGN_ID","message_name","message_time","message_device_time","Math","floor","logToScion","isWindowSupported","hasOwnProperty","PushSubscription","getMessagingInWindow","then","isSupported","getImmediate","_getToken","deleteToken","_deleteToken","onMessage","nextOrObserver","_onMessage","container","getProvider","addEventListener","version","onPush","getMessagePayloadInternal","deliveryMetricsExportedToBigQueryEnabled","fcmEvent","fid","project_number","instance_id","message_type","DISPLAY_NOTIFICATION","DATA_MESSAGE","sdk_platform","package_name","origin","createFcmEvent","getId","event_time_ms","source_extension_json_proto3","logEvents","createAndEnqueueLogEvent","stageLog","clientList","getClientList","some","client","visibilityState","url","startsWith","hasVisibleClients","postMessage","sendMessagePayloadInternalToWindows","notificationPayloadInternal","actions","maxActions","registration","showNotification","wrappedInternalPayload","wrapInternalPayload","onBackgroundMessageHandler","clients","matchAll","type","includeUncontrolled","isSwSupported","getMessagingInSw","onBackgroundMessage","undefined","_onBackgroundMessage","experimentalSetDeliveryMetricsExportedToBigQueryEnabled","enable","_setDeliveryMetricsExportedToBigQueryEnabled","waitUntil","newSubscription","onSubChange","action","stopImmediatePropagation","location","getLink","URL","href","originUrl","host","clientUrl","getWindowClient","focus","openWindow","setTimeout","onNotificationClick","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","apply","__generator","f","y","t","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","call","pop","defineProperty","exports","app_1","sw_1","messaging_1","sw","e_1","_a","log","initializeApp","authDomain","storageBucket","getMessaging","instances","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","args","logLevel","toISOString","PlatformLoggerServiceImpl","getPlatformInfoString","getProviders","provider","component","getComponent","isVersionServiceProvider","library","filter","logString","logger","_logLevel","val","setLogLevel","logHandler","_logHandler","userLogHandler","_userLogHandler","debug","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","Map","_components","_addComponent","addComponent","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","componentName","has","set","values","_getProvider","heartbeatController","optional","triggerHeartbeat","_removeServiceInstance","instanceIdentifier","clearInstance","_clearComponents","FirebaseAppImpl","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","_isDeleted","SDK_VERSION","rawConfig","existingApp","newApp","getApp","getApps","deleteApp","all","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","onLog","logCallback","customLogLevel","level","arg","ignored","toLowerCase","setUserLogHandler","forEach","inst","STORE_NAME","originalErrorMessage","writeHeartbeatsToIndexedDB","heartbeatObject","computeKey","idbGetError","HeartbeatServiceImpl","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_heartbeatsCache","agent","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","extractHeartbeatsForHeader","headerString","substring","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","Component","instanceFactory","instantiationMode","setInstantiationMode","mode","setMultipleInstances","multipleInstances","setServiceProps","props","serviceProps","setInstanceCreatedCallback","onInstanceCreated","Provider","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","getOrInitializeService","setComponent","isComponentEager","instanceDeferred","entries","services","INTERNAL","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","ComponentContainer","providers","PACKAGE_VERSION","isServerError","getInstallationsEndpoint","extractAuthTokenInfoFromResponse","requestStatus","expiresIn","responseExpiresIn","Number","creationTime","getErrorFromResponse","requestName","errorData","serverCode","serverMessage","serverStatus","status","retryIfServerError","fn","sleep","ms","VALID_FID_PATTERN","generateFid","fidByteArray","crypto","msCrypto","getRandomValues","substr","encode","test","fidChangeCallbacks","fidChanged","callFidChangeCallbacks","channel","broadcastChannel","BroadcastChannel","onmessage","size","broadcastFidChange","oldValue","remove","updateFn","store","newValue","getInstallationEntry","registrationPromise","installationEntry","oldEntry","clearTimedOutRequest","registrationStatus","updateOrCreateInstallationEntry","entryWithPromise","onLine","inProgressEntry","registrationTime","registeredInstallationEntry","heartbeatServiceProvider","heartbeatService","heartbeatsHeader","getHeartbeatsHeader","append","authVersion","sdkVersion","ok","responseValue","refreshToken","createInstallationRequest","registerInstallation","waitUntilFidRegistration","triggerRegistrationIfNecessary","entry","updateInstallationRequest","generateAuthTokenRequest","getGenerateAuthTokenEndpoint","getAuthorizationHeader","getHeadersWithAuth","installation","refreshAuthToken","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenExpired","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","makeAuthTokenRequestInProgressEntry","updatedInstallationEntry","fetchAuthTokenFromServer","INSTALLATIONS_NAME","installationsImpl","completeInstallationRegistration","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","target","prop","receiver","IDBTransaction","wrap","transformCachableValue","func","IDBDatabase","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","sort","unlisten","removeEventListener","complete","DOMException","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","Proxy","IDBRequest","success","promisifyRequest","openDB","blocked","blocking","terminated","openPromise","deleteDB","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","shift","oldTraps","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","d","definition","o","enumerable","globalThis","Function","obj","r","toStringTag"],"sourceRoot":""}